"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SampleProxyConnectorConsumer__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "CalldataMustHaveValidPayload",
        type: "error",
    },
    {
        inputs: [],
        name: "CalldataOverOrUnderFlow",
        type: "error",
    },
    {
        inputs: [],
        name: "CanNotPickMedianOfEmptyArray",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampMustNotBeZero",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampsMustBeEqual",
        type: "error",
    },
    {
        inputs: [],
        name: "EachSignerMustProvideTheSameValue",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyCalldataPointersArr",
        type: "error",
    },
    {
        inputs: [],
        name: "GetDataServiceIdNotImplemented",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectUnsignedMetadataSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedSignersCount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "requiredSignersCount",
                type: "uint256",
            },
        ],
        name: "InsufficientNumberOfUniqueSigners",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidCalldataPointer",
        type: "error",
    },
    {
        inputs: [],
        name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receivedSigner",
                type: "address",
            },
        ],
        name: "SignerNotAuthorised",
        type: "error",
    },
    {
        inputs: [],
        name: "TimestampIsNotValid",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "aggregateValues",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "extractTimestampFromRedstonePayload",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "extractTimestampsAndAssertAllAreEqual",
        outputs: [
            {
                internalType: "uint256",
                name: "extractedTimestamp",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAllMockAuthorised",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAllMockExceptLastOneAuthorised",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedMockSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getComputationResult",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getDataServiceId",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getUniqueSignersThreshold",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "getValueForDataFeedId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "mockArg1",
                type: "uint256",
            },
            {
                internalType: "string",
                name: "mockArg2",
                type: "string",
            },
            {
                internalType: "string",
                name: "mockArg3",
                type: "string",
            },
            {
                internalType: "string",
                name: "mockArg4",
                type: "string",
            },
            {
                internalType: "string",
                name: "mockArg5",
                type: "string",
            },
            {
                internalType: "string",
                name: "mockArg6",
                type: "string",
            },
        ],
        name: "getValueManyParams",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "getValuesForDataFeedIds",
        outputs: [
            {
                internalType: "uint256[]",
                name: "",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "latestSavedValue",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "processOracleValue",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "dataFeedIds",
                type: "bytes32[]",
            },
        ],
        name: "processOracleValues",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "returnMsgValue",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "revertWithTestMessage",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "revertWithoutMessage",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "dataFeedId",
                type: "bytes32",
            },
        ],
        name: "saveOracleValueInContractStorage",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint8",
                name: "newUniqueSignersThreshold",
                type: "uint8",
            },
        ],
        name: "updateUniqueSignersThreshold",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampMilliseconds",
                type: "uint256",
            },
        ],
        name: "validateTimestamp",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x6080604052600060019081556002805460ff1916909117905534801561002457600080fd5b50611d0d806100346000396000f3fe6080604052600436106101755760003560e01c80638e7a4120116100cb578063c274583a1161007f578063f50b2efe11610059578063f50b2efe146103e0578063f90c492414610400578063fabdf8361461041857600080fd5b8063c274583a14610389578063d22158fa146103ab578063d6a454c5146103cb57600080fd5b8063a09f9c3a116100b0578063a09f9c3a14610305578063b24ebfcc14610354578063c06a97cb1461037457600080fd5b80638e7a4120146102df57806395262d9f146102e557600080fd5b8063429989f01161012d57806355a547d51161010757806355a547d5146102945780635ddf81ba146102a95780637a1202c8146102bf57600080fd5b8063429989f0146102275780634db39f23146102475780634f178e441461026757600080fd5b80633c154daf1161015e5780633c154daf146101be5780633ce142f5146101d55780633d60fee31461020757600080fd5b80630f6561e71461017a578063351d31ab1461019e575b600080fd5b34801561018657600080fd5b506001545b6040519081526020015b60405180910390f35b3480156101aa57600080fd5b5061018b6101b93660046119dc565b610438565b3480156101ca57600080fd5b506101d361044f565b005b3480156101e157600080fd5b506101f56101f03660046118f8565b6104b6565b60405160ff9091168152602001610195565b34801561021357600080fd5b506101d36102223660046119c4565b6104c7565b34801561023357600080fd5b506101f56102423660046118f8565b6104d6565b34801561025357600080fd5b506101d36102623660046119c4565b6109aa565b34801561027357600080fd5b5061028761028236600461192c565b6109dc565b6040516101959190611adc565b3480156102a057600080fd5b5061018b6109e7565b3480156102b557600080fd5b5061018b60005481565b3480156102cb57600080fd5b5061018b6102da3660046119c4565b610b41565b3461018b565b3480156102f157600080fd5b506101f56103003660046118f8565b610b4c565b34801561031157600080fd5b506101d3610320366004611abb565b600280547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b34801561036057600080fd5b5061018b61036f36600461192c565b610b57565b34801561038057600080fd5b506101d3600080fd5b34801561039557600080fd5b5061039e610b62565b6040516101959190611b20565b3480156103b757600080fd5b506101f56103c63660046118f8565b610b96565b3480156103d757600080fd5b5061018b610c1d565b3480156103ec57600080fd5b506101d36103fb3660046119c4565b610c2c565b34801561040c57600080fd5b5060025460ff166101f5565b34801561042457600080fd5b506101d361043336600461192c565b610c6f565b600061044388610cea565b98975050505050505050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f54657374206d657373616765000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60006104c182610b4c565b92915050565b6104d081610cea565b60005550565b600073f39fd6e51aad88f6f4ce6ab8827279cfffb9226673ffffffffffffffffffffffffffffffffffffffff8316141561051257506000919050565b7370997970c51812dc3a010c7d01b50e0d17dc79c873ffffffffffffffffffffffffffffffffffffffff8316141561054c57506001919050565b733c44cdddb6a900fa2b585dd299e03d12fa4293bc73ffffffffffffffffffffffffffffffffffffffff8316141561058657506002919050565b7390f79bf6eb2c4f870365e785982e1f101e93b90673ffffffffffffffffffffffffffffffffffffffff831614156105c057506003919050565b7315d34aaf54267db7d7c367839aaf71a00a2c6a6573ffffffffffffffffffffffffffffffffffffffff831614156105fa57506004919050565b739965507d1a55bcc2695c58ba16fb37d819b0a4dc73ffffffffffffffffffffffffffffffffffffffff8316141561063457506005919050565b73976ea74026e726554db657fa54763abd0c3a0aa973ffffffffffffffffffffffffffffffffffffffff8316141561066e57506006919050565b7314dc79964da2c08b23698b3d3cc7ca32193d995573ffffffffffffffffffffffffffffffffffffffff831614156106a857506007919050565b7323618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f73ffffffffffffffffffffffffffffffffffffffff831614156106e257506008919050565b73a0ee7a142d267c1f36714e4a8f75612f20a7972073ffffffffffffffffffffffffffffffffffffffff8316141561071c57506009919050565b73bcd4042de499d14e55001ccbb24a551f3b95409673ffffffffffffffffffffffffffffffffffffffff831614156107565750600a919050565b7371be63f3384f5fb98995898a86b02fb2426c578873ffffffffffffffffffffffffffffffffffffffff831614156107905750600b919050565b73fabb0ac9d68b0b445fb7357272ff202c5651694a73ffffffffffffffffffffffffffffffffffffffff831614156107ca5750600c919050565b731cbd3b2770909d4e10f157cabc84c7264073c9ec73ffffffffffffffffffffffffffffffffffffffff831614156108045750600d919050565b73df3e18d64bc6a983f673ab319ccae4f1a57c709773ffffffffffffffffffffffffffffffffffffffff8316141561083e5750600e919050565b73cd3b766ccdd6ae721141f452c550ca635964ce7173ffffffffffffffffffffffffffffffffffffffff831614156108785750600f919050565b732546bcd3c84621e976d8185a91a922ae77ecec3073ffffffffffffffffffffffffffffffffffffffff831614156108b257506010919050565b73bda5747bfd65f08deb54cb465eb87d40e51b197e73ffffffffffffffffffffffffffffffffffffffff831614156108ec57506011919050565b73dd2fd4581271e230360230f9337d5c0430bf44c073ffffffffffffffffffffffffffffffffffffffff8316141561092657506012919050565b738626f6940e2eb28930efb4cef49b2d1f2c9c119973ffffffffffffffffffffffffffffffffffffffff8316141561096057506013919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016104ad565b60006109b582610cea565b90506109c281602a611bf4565b600160008282546109d39190611bc8565b90915550505050565b60606104c182610d76565b6000806109f2610d81565b905060006109ff82610e98565b61ffff16905080610a3c576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a47600283611bc8565b915060005b81811015610b3b576000610a5f84610eeb565b9050600080610a6f606887611bc8565b90506000610a7d8236611c31565b80359350905065ffffffffffff8316610ac2576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87610ad7578265ffffffffffff169750610b18565b878365ffffffffffff1614610b18576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b228488611bc8565b9650505050508080610b3390611c48565b915050610a4c565b50505090565b60006104c182610cea565b60006104c182610b96565b60006104c182610f27565b60606040517f608b530700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000738626f6940e2eb28930efb4cef49b2d1f2c9c119973ffffffffffffffffffffffffffffffffffffffff83161415610c14576040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024016104ad565b6104c1826104d6565b6000610c276109e7565b905090565b6501812f2590c0811015610c6c576040517f355b874300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6000610c7a82610d76565b905060005b8251811015610ce557818181518110610ca857634e487b7160e01b600052603260045260246000fd5b6020026020010151602a610cbc9190611bf4565b60016000828254610ccd9190611bc8565b90915550819050610cdd81611c48565b915050610c7f565b505050565b604080516001808252818301909252600091829190602080830190803683370190505090508281600081518110610d3157634e487b7160e01b600052603260045260246000fd5b602002602001018181525050610d4681610d76565b600081518110610d6657634e487b7160e01b600052603260045260246000fd5b6020026020010151915050919050565b60606104c182610f32565b60006602ed57011e0000601f1936013581161480610dcb576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115610e08576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610e41600362ffffff8516611bc8565b610e4b9190611bc8565b905036610e59600283611bc8565b1115610e91576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600080610ea6602084611bc8565b905036811115610ee2576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b36033592915050565b6000806000610ef98461115a565b9092509050604e610f0b826020611bc8565b610f159084611bf4565b610f1f9190611bc8565b949350505050565b60006104c1826111b1565b60606000825167ffffffffffffffff811115610f5e57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610f87578160200160208202803683370190505b5090506000835167ffffffffffffffff811115610fb457634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610fdd578160200160208202803683370190505b5090506000845167ffffffffffffffff81111561100a57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561103d57816020015b60608152602001906001900390816110285790505b50905060005b85518110156110e05760025460ff1667ffffffffffffffff81111561107857634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156110a1578160200160208202803683370190505b508282815181106110c257634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806110d890611c48565b915050611043565b5060006110eb610d81565b905060006110f882610e98565b61ffff169050611109600283611bc8565b60405190925060005b8281101561114f5760006111298a898989896112ad565b90506111358186611bc8565b94508260405250808061114790611c48565b915050611112565b5061044384876115bb565b60008080808061116b604187611bc8565b9050600061118461117d602084611bc8565b3690611744565b803594509050611195816003611744565b62ffffff9490941697933563ffffffff16965092945050505050565b60008151600014156111ef576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6111f882611750565b6000600283516112089190611be0565b9050600283516112189190611c81565b61128d5760006112808461122d600185611c31565b8151811061124b57634e487b7160e01b600052603260045260246000fd5b602002602001015185848151811061127357634e487b7160e01b600052603260045260246000fd5b602002602001015161179e565b9050610f1f600282611be0565b828181518110610d6657634e487b7160e01b600052603260045260246000fd5b6000806000806112bc8561115a565b909250905060008080606081600d6112df6112d8602089611bc8565b89906117aa565b6112e99190611bc8565b905060006112fb61117d60688d611bc8565b905060006113188361130e60418f611bc8565b61117d9190611bc8565b90506113248382611337565b935082602085012094508135965061135b565b60408051838152602081850181019092526000910183838237601f19019392505050565b61136c8765ffffffffffff16610c2c565b6113808561137b60418f611bc8565b6117b6565b955061138b866104b6565b60ff1699505050505050505060008060005b84811015611588576113b088858361182e565b909350915060005b8c51811015611575578c81815181106113e157634e487b7160e01b600052603260045260246000fd5b60200260200101518414156115635760008b828151811061141257634e487b7160e01b600052603260045260246000fd5b6020026020010151905061142b81896001901b16151590565b158015611466575060025460ff1660ff168d838151811061145c57634e487b7160e01b600052603260045260246000fd5b6020026020010151105b1561155d578c828151811061148b57634e487b7160e01b600052603260045260246000fd5b6020026020010180518091906114a090611c48565b81525050838b83815181106114c557634e487b7160e01b600052603260045260246000fd5b602002602001015160018f85815181106114ef57634e487b7160e01b600052603260045260246000fd5b60200260200101516115019190611c31565b8151811061151f57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526001881b81178c838151811061155057634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505b50611575565b8061156d81611c48565b9150506113b8565b508061158081611c48565b91505061139d565b505050816020826115999190611bc8565b6115a39190611bf4565b6115ae90604e611bc8565b9998505050505050505050565b60606000835167ffffffffffffffff8111156115e757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611610578160200160208202803683370190505b509050600061162160025460ff1690565b60ff16905060005b855181101561173a578185828151811061165357634e487b7160e01b600052603260045260246000fd5b602002602001015110156116c75784818151811061168157634e487b7160e01b600052603260045260246000fd5b6020026020010151826040517f2b13aef50000000000000000000000000000000000000000000000000000000081526004016104ad929190918252602082015260400190565b60006116f98783815181106116ec57634e487b7160e01b600052603260045260246000fd5b6020026020010151610b57565b90508084838151811061171c57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152508061173281611c48565b915050611629565b5090949350505050565b6000610e918284611c31565b8051602082016020820281019150805b8281101561179857815b8181101561178f578151815180821015611785578084528183525b505060200161176a565b50602001611760565b50505050565b6000610e918284611bc8565b6000610e918284611bf4565b60408051600080825260208083018085528690523685900380850135831a948401859052803560608501819052910135608084018190529193909260019060a0016020604051602081039080840390855afa158015611819573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6000808061183d604e87611bc8565b9050600061186a611863611852602089611bc8565b61185d886001611bc8565b906117aa565b839061179e565b905060006118783683611744565b80359960209091013598509650505050505050565b600082601f83011261189d578081fd5b813567ffffffffffffffff8111156118b7576118b7611cc1565b6118ca6020601f19601f84011601611b73565b8181528460208386010111156118de578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215611909578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610e91578182fd5b6000602080838503121561193e578182fd5b823567ffffffffffffffff811115611954578283fd5b8301601f81018513611964578283fd5b803561197761197282611ba4565b611b73565b80828252848201915084840188868560051b8701011115611996578687fd5b8694505b838510156119b857803583526001949094019391850191850161199a565b50979650505050505050565b6000602082840312156119d5578081fd5b5035919050565b600080600080600080600060e0888a0312156119f6578283fd5b8735965060208801359550604088013567ffffffffffffffff80821115611a1b578485fd5b611a278b838c0161188d565b965060608a0135915080821115611a3c578485fd5b611a488b838c0161188d565b955060808a0135915080821115611a5d578485fd5b611a698b838c0161188d565b945060a08a0135915080821115611a7e578384fd5b611a8a8b838c0161188d565b935060c08a0135915080821115611a9f578283fd5b50611aac8a828b0161188d565b91505092959891949750929550565b600060208284031215611acc578081fd5b813560ff81168114610e91578182fd5b6020808252825182820181905260009190848201906040850190845b81811015611b1457835183529284019291840191600101611af8565b50909695505050505050565b6000602080835283518082850152825b81811015611b4c57858101830151858201604001528201611b30565b81811115611b5d5783604083870101525b50601f01601f1916929092016040019392505050565b604051601f8201601f1916810167ffffffffffffffff81118282101715611b9c57611b9c611cc1565b604052919050565b600067ffffffffffffffff821115611bbe57611bbe611cc1565b5060051b60200190565b60008219821115611bdb57611bdb611c95565b500190565b600082611bef57611bef611cab565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c2c57611c2c611c95565b500290565b600082821015611c4357611c43611c95565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611c7a57611c7a611c95565b5060010190565b600082611c9057611c90611cab565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e7a6bd1b73f61535cc5a238104a7ceeda383e4ce6baf870ee689d07f1ab5af8064736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class SampleProxyConnectorConsumer__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SampleProxyConnectorConsumer__factory = SampleProxyConnectorConsumer__factory;
//# sourceMappingURL=SampleProxyConnectorConsumer__factory.js.map