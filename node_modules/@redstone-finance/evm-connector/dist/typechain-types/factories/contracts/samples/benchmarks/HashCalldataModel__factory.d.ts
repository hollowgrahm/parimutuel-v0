import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { HashCalldataModel, HashCalldataModelInterface } from "../../../../contracts/samples/benchmarks/HashCalldataModel";
type HashCalldataModelConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class HashCalldataModel__factory extends ContractFactory {
    constructor(...args: HashCalldataModelConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<HashCalldataModel>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): HashCalldataModel;
    connect(signer: Signer): HashCalldataModel__factory;
    static readonly bytecode = "";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "CalldataMustHaveValidPayload";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CalldataOverOrUnderFlow";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CanNotPickMedianOfEmptyArray";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataPackageTimestampMustNotBeZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataPackageTimestampsMustBeEqual";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EachSignerMustProvideTheSameValue";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EmptyCalldataPointersArr";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "GetDataServiceIdNotImplemented";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "IncorrectUnsignedMetadataSize";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedSignersCount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "requiredSignersCount";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientNumberOfUniqueSigners";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCalldataPointer";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "RedstonePayloadMustHaveAtLeastOneDataPackage";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "receivedSigner";
            readonly type: "address";
        }];
        readonly name: "SignerNotAuthorised";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TimestampIsNotValid";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "values";
            readonly type: "uint256[]";
        }];
        readonly name: "aggregateValues";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg1";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg2";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg3";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg4";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg5";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg6";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg7";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg8";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg9";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg10";
            readonly type: "bytes32";
        }];
        readonly name: "executeRequestWith10ArgsWithPrices";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg1";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg2";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg3";
            readonly type: "bytes32";
        }];
        readonly name: "executeRequestWith3ArgsWithPrices";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg1";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg2";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg3";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg4";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg5";
            readonly type: "bytes32";
        }];
        readonly name: "executeRequestWith5ArgsWithPrices";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "extractTimestampsAndAssertAllAreEqual";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "extractedTimestamp";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAllMockAuthorised";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAllMockExceptLastOneAuthorised";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAuthorisedMockSignerIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAuthorisedSignerIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDataServiceId";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getUniqueSignersThreshold";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "requests";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "arg1";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg2";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg3";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg4";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg5";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg6";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg7";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg8";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg9";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg10";
            readonly type: "bytes32";
        }];
        readonly name: "sendRequestWith10Args";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "arg1";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg2";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg3";
            readonly type: "bytes32";
        }];
        readonly name: "sendRequestWith3Args";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "arg1";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg2";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg3";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg4";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "arg5";
            readonly type: "bytes32";
        }];
        readonly name: "sendRequestWith5Args";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bool";
            readonly name: "_deleteFromStorage";
            readonly type: "bool";
        }];
        readonly name: "setDeleteFromStorage";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedTimestampMilliseconds";
            readonly type: "uint256";
        }];
        readonly name: "validateTimestamp";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): HashCalldataModelInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): HashCalldataModel;
}
export {};
//# sourceMappingURL=HashCalldataModel__factory.d.ts.map