import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { Benchmark, BenchmarkInterface } from "../../../../contracts/samples/benchmarks/Benchmark";
type BenchmarkConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Benchmark__factory extends ContractFactory {
    constructor(...args: BenchmarkConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<Benchmark>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): Benchmark;
    connect(signer: Signer): Benchmark__factory;
    static readonly bytecode = "0x6080604052600080556001805460ff19168117905534801561002057600080fd5b506118a3806100306000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063a09f9c3a11610081578063d22158fa1161005b578063d22158fa146101d4578063f50b2efe146101e7578063f90c4924146101fa57600080fd5b8063a09f9c3a1461016a578063b24ebfcc146101ac578063c274583a146101bf57600080fd5b80634b11366f116100b25780634b11366f1461012b57806355a547d51461014157806395262d9f1461015757600080fd5b80630b3703ef146100d95780633ce142f5146100ee578063429989f014610118575b600080fd5b6100ec6100e7366004611566565b610205565b005b6101016100fc366004611532565b61024d565b60405160ff90911681526020015b60405180910390f35b610101610126366004611532565b61025e565b6100ec610139366004611566565b505060008055565b610149610737565b60405190815260200161010f565b610101610165366004611532565b610891565b6100ec6101783660046116cc565b600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff92909216919091179055565b6101496101ba3660046115d6565b61089c565b6101c76108a7565b60405161010f91906116ed565b6101016101e2366004611532565b6108db565b6100ec6101f53660046116b4565b610962565b60015460ff16610101565b60006102438383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506109a592505050565b5050600080555050565b600061025882610891565b92915050565b600073f39fd6e51aad88f6f4ce6ab8827279cfffb9226673ffffffffffffffffffffffffffffffffffffffff8316141561029a57506000919050565b7370997970c51812dc3a010c7d01b50e0d17dc79c873ffffffffffffffffffffffffffffffffffffffff831614156102d457506001919050565b733c44cdddb6a900fa2b585dd299e03d12fa4293bc73ffffffffffffffffffffffffffffffffffffffff8316141561030e57506002919050565b7390f79bf6eb2c4f870365e785982e1f101e93b90673ffffffffffffffffffffffffffffffffffffffff8316141561034857506003919050565b7315d34aaf54267db7d7c367839aaf71a00a2c6a6573ffffffffffffffffffffffffffffffffffffffff8316141561038257506004919050565b739965507d1a55bcc2695c58ba16fb37d819b0a4dc73ffffffffffffffffffffffffffffffffffffffff831614156103bc57506005919050565b73976ea74026e726554db657fa54763abd0c3a0aa973ffffffffffffffffffffffffffffffffffffffff831614156103f657506006919050565b7314dc79964da2c08b23698b3d3cc7ca32193d995573ffffffffffffffffffffffffffffffffffffffff8316141561043057506007919050565b7323618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f73ffffffffffffffffffffffffffffffffffffffff8316141561046a57506008919050565b73a0ee7a142d267c1f36714e4a8f75612f20a7972073ffffffffffffffffffffffffffffffffffffffff831614156104a457506009919050565b73bcd4042de499d14e55001ccbb24a551f3b95409673ffffffffffffffffffffffffffffffffffffffff831614156104de5750600a919050565b7371be63f3384f5fb98995898a86b02fb2426c578873ffffffffffffffffffffffffffffffffffffffff831614156105185750600b919050565b73fabb0ac9d68b0b445fb7357272ff202c5651694a73ffffffffffffffffffffffffffffffffffffffff831614156105525750600c919050565b731cbd3b2770909d4e10f157cabc84c7264073c9ec73ffffffffffffffffffffffffffffffffffffffff8316141561058c5750600d919050565b73df3e18d64bc6a983f673ab319ccae4f1a57c709773ffffffffffffffffffffffffffffffffffffffff831614156105c65750600e919050565b73cd3b766ccdd6ae721141f452c550ca635964ce7173ffffffffffffffffffffffffffffffffffffffff831614156106005750600f919050565b732546bcd3c84621e976d8185a91a922ae77ecec3073ffffffffffffffffffffffffffffffffffffffff8316141561063a57506010919050565b73bda5747bfd65f08deb54cb465eb87d40e51b197e73ffffffffffffffffffffffffffffffffffffffff8316141561067457506011919050565b73dd2fd4581271e230360230f9337d5c0430bf44c073ffffffffffffffffffffffffffffffffffffffff831614156106ae57506012919050565b738626f6940e2eb28930efb4cef49b2d1f2c9c119973ffffffffffffffffffffffffffffffffffffffff831614156106e857506013919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b6000806107426109b0565b9050600061074f82610ae5565b61ffff1690508061078c576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61079760028361175e565b915060005b8181101561088b5760006107af84610b38565b90506000806107bf60688761175e565b905060006107cd82366117c7565b80359350905065ffffffffffff8316610812576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87610827578265ffffffffffff169750610868565b878365ffffffffffff1614610868576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610872848861175e565b9650505050508080610883906117de565b91505061079c565b50505090565b60006102588261025e565b600061025882610b74565b60606040517f608b530700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000738626f6940e2eb28930efb4cef49b2d1f2c9c119973ffffffffffffffffffffffffffffffffffffffff83161415610959576040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316600482015260240161072e565b6102588261025e565b6501812f2590c08110156109a2576040517f355b874300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b606061025882610b7f565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013581161480610a18576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115610a55576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610a8e600362ffffff851661175e565b610a98919061175e565b905036610aa660028361175e565b1115610ade576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600080610af360208461175e565b905036811115610b2f576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b36033592915050565b6000806000610b4684610db3565b9092509050604e610b5882602061175e565b610b62908461178a565b610b6c919061175e565b949350505050565b600061025882610e0a565b60606000825167ffffffffffffffff811115610bab57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610bd4578160200160208202803683370190505b5090506000835167ffffffffffffffff811115610c0157634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610c2a578160200160208202803683370190505b5090506000845167ffffffffffffffff811115610c5757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610c8a57816020015b6060815260200190600190039081610c755790505b50905060005b8551811015610d2d5760015460ff1667ffffffffffffffff811115610cc557634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610cee578160200160208202803683370190505b50828281518110610d0f57634e487b7160e01b600052603260045260246000fd5b60200260200101819052508080610d25906117de565b915050610c90565b506000610d386109b0565b90506000610d4582610ae5565b61ffff169050610d5660028361175e565b60405190925060005b82811015610d9c576000610d768a89898989610f16565b9050610d82818661175e565b945082604052508080610d94906117de565b915050610d5f565b50610da78487611242565b98975050505050505050565b600080808080610dc460418761175e565b90506000610ddd610dd660208461175e565b36906113cb565b803594509050610dee8160036113cb565b62ffffff9490941697933563ffffffff16965092945050505050565b6000815160001415610e48576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e51826113d7565b600060028351610e619190611776565b905060028351610e719190611817565b610ee6576000610ed984610e866001856117c7565b81518110610ea457634e487b7160e01b600052603260045260246000fd5b6020026020010151858481518110610ecc57634e487b7160e01b600052603260045260246000fd5b6020026020010151611425565b9050610b6c600282611776565b828181518110610f0657634e487b7160e01b600052603260045260246000fd5b6020026020010151915050919050565b600080600080610f2585610db3565b909250905060008080606081600d610f48610f4160208961175e565b8990611431565b610f52919061175e565b90506000610f64610dd660688d61175e565b90506000610f8183610f7760418f61175e565b610dd6919061175e565b9050610f8d8382610fa0565b9350826020850120945081359650610fe2565b604080518381526020818501810190925260009101838382377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0019392505050565b610ff38765ffffffffffff16610962565b6110078561100260418f61175e565b61143d565b95506110128661024d565b60ff1699505050505050505060008060005b8481101561120f576110378885836114d3565b909350915060005b8c518110156111fc578c818151811061106857634e487b7160e01b600052603260045260246000fd5b60200260200101518414156111ea5760008b828151811061109957634e487b7160e01b600052603260045260246000fd5b602002602001015190506110b281896001901b16151590565b1580156110ed575060015460ff1660ff168d83815181106110e357634e487b7160e01b600052603260045260246000fd5b6020026020010151105b156111e4578c828151811061111257634e487b7160e01b600052603260045260246000fd5b602002602001018051809190611127906117de565b81525050838b838151811061114c57634e487b7160e01b600052603260045260246000fd5b602002602001015160018f858151811061117657634e487b7160e01b600052603260045260246000fd5b602002602001015161118891906117c7565b815181106111a657634e487b7160e01b600052603260045260246000fd5b60209081029190910101526001881b81178c83815181106111d757634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505b506111fc565b806111f4816117de565b91505061103f565b5080611207816117de565b915050611024565b50505081602082611220919061175e565b61122a919061178a565b61123590604e61175e565b9998505050505050505050565b60606000835167ffffffffffffffff81111561126e57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611297578160200160208202803683370190505b50905060006112a860015460ff1690565b60ff16905060005b85518110156113c157818582815181106112da57634e487b7160e01b600052603260045260246000fd5b6020026020010151101561134e5784818151811061130857634e487b7160e01b600052603260045260246000fd5b6020026020010151826040517f2b13aef500000000000000000000000000000000000000000000000000000000815260040161072e929190918252602082015260400190565b600061138087838151811061137357634e487b7160e01b600052603260045260246000fd5b602002602001015161089c565b9050808483815181106113a357634e487b7160e01b600052603260045260246000fd5b602090810291909101015250806113b9816117de565b9150506112b0565b5090949350505050565b6000610ade82846117c7565b8051602082016020820281019150805b8281101561141f57815b8181101561141657815181518082101561140c578084528183525b50506020016113f1565b506020016113e7565b50505050565b6000610ade828461175e565b6000610ade828461178a565b60408051600080825260208083018085528690523685900380850135831a948401859052803560608501819052910135608084018190529193909260019060a0016020604051602081039080840390855afa1580156114a0573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00151979650505050505050565b600080806114e2604e8761175e565b9050600061150f6115086114f760208961175e565b61150288600161175e565b90611431565b8390611425565b9050600061151d36836113cb565b80359960209091013598509650505050505050565b600060208284031215611543578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610ade578182fd5b60008060208385031215611578578081fd5b823567ffffffffffffffff8082111561158f578283fd5b818501915085601f8301126115a2578283fd5b8135818111156115b0578384fd5b8660208260051b85010111156115c4578384fd5b60209290920196919550909350505050565b600060208083850312156115e8578182fd5b823567ffffffffffffffff808211156115ff578384fd5b818501915085601f830112611612578384fd5b81358181111561162457611624611857565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561166757611667611857565b604052828152858101935084860182860187018a1015611685578788fd5b8795505b838610156116a7578035855260019590950194938601938601611689565b5098975050505050505050565b6000602082840312156116c5578081fd5b5035919050565b6000602082840312156116dd578081fd5b813560ff81168114610ade578182fd5b6000602080835283518082850152825b81811015611719578581018301518582016040015282016116fd565b8181111561172a5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600082198211156117715761177161182b565b500190565b60008261178557611785611841565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117c2576117c261182b565b500290565b6000828210156117d9576117d961182b565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156118105761181061182b565b5060010190565b60008261182657611826611841565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212203986fb9e0abd779b2f664c8300c6b0162d2d8be53cf73263207f1d67e21d3bdd64736f6c63430008040033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "CalldataMustHaveValidPayload";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CalldataOverOrUnderFlow";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CanNotPickMedianOfEmptyArray";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataPackageTimestampMustNotBeZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataPackageTimestampsMustBeEqual";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EachSignerMustProvideTheSameValue";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EmptyCalldataPointersArr";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "GetDataServiceIdNotImplemented";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "IncorrectUnsignedMetadataSize";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedSignersCount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "requiredSignersCount";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientNumberOfUniqueSigners";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCalldataPointer";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "RedstonePayloadMustHaveAtLeastOneDataPackage";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "receivedSigner";
            readonly type: "address";
        }];
        readonly name: "SignerNotAuthorised";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TimestampIsNotValid";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "values";
            readonly type: "uint256[]";
        }];
        readonly name: "aggregateValues";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "dataFeedIds";
            readonly type: "bytes32[]";
        }];
        readonly name: "emptyExtractOracleValues";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "dataFeedIds";
            readonly type: "bytes32[]";
        }];
        readonly name: "extractOracleValues";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "extractTimestampsAndAssertAllAreEqual";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "extractedTimestamp";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAllMockAuthorised";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAllMockExceptLastOneAuthorised";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAuthorisedMockSignerIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAuthorisedSignerIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDataServiceId";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getUniqueSignersThreshold";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "newUniqueSignersThreshold";
            readonly type: "uint8";
        }];
        readonly name: "updateUniqueSignersThreshold";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedTimestampMilliseconds";
            readonly type: "uint256";
        }];
        readonly name: "validateTimestamp";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): BenchmarkInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Benchmark;
}
export {};
//# sourceMappingURL=Benchmark__factory.d.ts.map