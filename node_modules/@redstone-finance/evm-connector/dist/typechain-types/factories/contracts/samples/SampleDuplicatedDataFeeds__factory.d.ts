import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { SampleDuplicatedDataFeeds, SampleDuplicatedDataFeedsInterface } from "../../../contracts/samples/SampleDuplicatedDataFeeds";
type SampleDuplicatedDataFeedsConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SampleDuplicatedDataFeeds__factory extends ContractFactory {
    constructor(...args: SampleDuplicatedDataFeedsConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<SampleDuplicatedDataFeeds>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): SampleDuplicatedDataFeeds;
    connect(signer: Signer): SampleDuplicatedDataFeeds__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b50611bab806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063b24ebfcc11610081578063d22158fa1161005b578063d22158fa14610186578063f50b2efe14610199578063f90c4924146101ac57600080fd5b8063b24ebfcc14610149578063c22b59281461015c578063c274583a1461017157600080fd5b806353432eb4116100b257806353432eb41461010b57806355a547d51461012057806395262d9f1461013657600080fd5b80633ce142f5146100ce578063429989f0146100f8575b600080fd5b6100e16100dc366004611817565b6101b3565b60405160ff90911681526020015b60405180910390f35b6100e1610106366004611817565b6101c4565b61011e61011936600461184b565b61069d565b005b6101286106f7565b6040519081526020016100ef565b6100e1610144366004611817565b610851565b6101286101573660046118bb565b61085c565b610164610867565b6040516100ef91906119b1565b6101796108bf565b6040516100ef91906119f5565b6100e1610194366004611817565b6108f3565b61011e6101a7366004611999565b61097a565b600a6100e1565b60006101be82610851565b92915050565b600073f39fd6e51aad88f6f4ce6ab8827279cfffb9226673ffffffffffffffffffffffffffffffffffffffff8316141561020057506000919050565b7370997970c51812dc3a010c7d01b50e0d17dc79c873ffffffffffffffffffffffffffffffffffffffff8316141561023a57506001919050565b733c44cdddb6a900fa2b585dd299e03d12fa4293bc73ffffffffffffffffffffffffffffffffffffffff8316141561027457506002919050565b7390f79bf6eb2c4f870365e785982e1f101e93b90673ffffffffffffffffffffffffffffffffffffffff831614156102ae57506003919050565b7315d34aaf54267db7d7c367839aaf71a00a2c6a6573ffffffffffffffffffffffffffffffffffffffff831614156102e857506004919050565b739965507d1a55bcc2695c58ba16fb37d819b0a4dc73ffffffffffffffffffffffffffffffffffffffff8316141561032257506005919050565b73976ea74026e726554db657fa54763abd0c3a0aa973ffffffffffffffffffffffffffffffffffffffff8316141561035c57506006919050565b7314dc79964da2c08b23698b3d3cc7ca32193d995573ffffffffffffffffffffffffffffffffffffffff8316141561039657506007919050565b7323618e81e3f5cdf7f54c3d65f7fbc0abf5b21e8f73ffffffffffffffffffffffffffffffffffffffff831614156103d057506008919050565b73a0ee7a142d267c1f36714e4a8f75612f20a7972073ffffffffffffffffffffffffffffffffffffffff8316141561040a57506009919050565b73bcd4042de499d14e55001ccbb24a551f3b95409673ffffffffffffffffffffffffffffffffffffffff831614156104445750600a919050565b7371be63f3384f5fb98995898a86b02fb2426c578873ffffffffffffffffffffffffffffffffffffffff8316141561047e5750600b919050565b73fabb0ac9d68b0b445fb7357272ff202c5651694a73ffffffffffffffffffffffffffffffffffffffff831614156104b85750600c919050565b731cbd3b2770909d4e10f157cabc84c7264073c9ec73ffffffffffffffffffffffffffffffffffffffff831614156104f25750600d919050565b73df3e18d64bc6a983f673ab319ccae4f1a57c709773ffffffffffffffffffffffffffffffffffffffff8316141561052c5750600e919050565b73cd3b766ccdd6ae721141f452c550ca635964ce7173ffffffffffffffffffffffffffffffffffffffff831614156105665750600f919050565b732546bcd3c84621e976d8185a91a922ae77ecec3073ffffffffffffffffffffffffffffffffffffffff831614156105a057506010919050565b73bda5747bfd65f08deb54cb465eb87d40e51b197e73ffffffffffffffffffffffffffffffffffffffff831614156105da57506011919050565b73dd2fd4581271e230360230f9337d5c0430bf44c073ffffffffffffffffffffffffffffffffffffffff8316141561061457506012919050565b738626f6940e2eb28930efb4cef49b2d1f2c9c119973ffffffffffffffffffffffffffffffffffffffff8316141561064e57506013919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b60006106db8383808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506109bd92505050565b80519091506106f19060009060208401906117b7565b50505050565b600080610702610c7a565b9050600061070f82610daf565b61ffff1690508061074c576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610757600283611a66565b915060005b8181101561084b57600061076f84610e02565b905060008061077f606887611a66565b9050600061078d8236611acf565b80359350905065ffffffffffff83166107d2576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876107e7578265ffffffffffff169750610828565b878365ffffffffffff1614610828576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108328488611a66565b965050505050808061084390611ae6565b91505061075c565b50505090565b60006101be826108f3565b60006101be82610e3e565b606060008054806020026020016040519081016040528092919081815260200182805480156108b557602002820191906000526020600020905b8154815260200190600101908083116108a1575b5050505050905090565b60606040517f608b530700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000738626f6940e2eb28930efb4cef49b2d1f2c9c119973ffffffffffffffffffffffffffffffffffffffff83161415610971576040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602401610694565b6101be826101c4565b6501812f2590c08110156109ba576040517f355b874300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60606000825167ffffffffffffffff8111156109e957634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610a12578160200160208202803683370190505b509050600080805b8551811015610b1c576000925060005b82811015610aa357868281518110610a5257634e487b7160e01b600052603260045260246000fd5b6020026020010151858281518110610a7a57634e487b7160e01b600052603260045260246000fd5b60200260200101511415610a915760019350610aa3565b80610a9b81611ae6565b915050610a2a565b5082610b0a57858181518110610ac957634e487b7160e01b600052603260045260246000fd5b6020026020010151848381518110610af157634e487b7160e01b600052603260045260246000fd5b602090810291909101015281610b0681611ae6565b9250505b80610b1481611ae6565b915050610a1a565b508083526000610b2b84610e49565b90506000865167ffffffffffffffff811115610b5757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610b80578160200160208202803683370190505b50905060005b8751811015610c6f5760005b8651811015610c5c57868181518110610bbb57634e487b7160e01b600052603260045260246000fd5b6020026020010151898381518110610be357634e487b7160e01b600052603260045260246000fd5b60200260200101511415610c4a57838181518110610c1157634e487b7160e01b600052603260045260246000fd5b6020026020010151838381518110610c3957634e487b7160e01b600052603260045260246000fd5b602002602001018181525050610c5c565b80610c5481611ae6565b915050610b92565b5080610c6781611ae6565b915050610b86565b509695505050505050565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013581161480610ce2576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003660291115610d1f576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610d58600362ffffff8516611a66565b610d629190611a66565b905036610d70600283611a66565b1115610da8576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600080610dbd602084611a66565b905036811115610df9576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b36033592915050565b6000806000610e1084610e54565b9092509050604e610e22826020611a66565b610e2c9084611a92565b610e369190611a66565b949350505050565b60006101be82610eab565b60606101be82610fb7565b600080808080610e65604187611a66565b90506000610e7e610e77602084611a66565b36906111b6565b803594509050610e8f8160036111b6565b62ffffff9490941697933563ffffffff16965092945050505050565b6000815160001415610ee9576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ef2826111c2565b600060028351610f029190611a7e565b905060028351610f129190611b1f565b610f87576000610f7a84610f27600185611acf565b81518110610f4557634e487b7160e01b600052603260045260246000fd5b6020026020010151858481518110610f6d57634e487b7160e01b600052603260045260246000fd5b602002602001015161120a565b9050610e36600282611a7e565b828181518110610fa757634e487b7160e01b600052603260045260246000fd5b6020026020010151915050919050565b60606000825167ffffffffffffffff811115610fe357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561100c578160200160208202803683370190505b5090506000835167ffffffffffffffff81111561103957634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611062578160200160208202803683370190505b5090506000845167ffffffffffffffff81111561108f57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156110c257816020015b60608152602001906001900390816110ad5790505b50905060005b85518110156111305760408051600a80825261016082019092529060208201610140803683370190505082828151811061111257634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061112890611ae6565b9150506110c8565b50600061113b610c7a565b9050600061114882610daf565b61ffff169050611159600283611a66565b60405190925060005b8281101561119f5760006111798a89898989611216565b90506111858186611a66565b94508260405250808061119790611ae6565b915050611162565b506111aa848761153e565b98975050505050505050565b6000610da88284611acf565b8051602082016020820281019150805b828110156106f157815b818110156112015781518151808210156111f7578084528183525b50506020016111dc565b506020016111d2565b6000610da88284611a66565b60008060008061122585610e54565b909250905060008080606081600d611248611241602089611a66565b89906116b6565b6112529190611a66565b90506000611264610e7760688d611a66565b905060006112818361127760418f611a66565b610e779190611a66565b905061128d83826112a0565b93508260208501209450813596506112e2565b604080518381526020818501810190925260009101838382377fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0019392505050565b6112f38765ffffffffffff1661097a565b6113078561130260418f611a66565b6116c2565b9550611312866101b3565b60ff1699505050505050505060008060005b8481101561150b57611337888583611758565b909350915060005b8c518110156114f8578c818151811061136857634e487b7160e01b600052603260045260246000fd5b60200260200101518414156114e65760008b828151811061139957634e487b7160e01b600052603260045260246000fd5b602002602001015190506113b281896001901b16151590565b1580156113e95750600a60ff168d83815181106113df57634e487b7160e01b600052603260045260246000fd5b6020026020010151105b156114e0578c828151811061140e57634e487b7160e01b600052603260045260246000fd5b60200260200101805180919061142390611ae6565b81525050838b838151811061144857634e487b7160e01b600052603260045260246000fd5b602002602001015160018f858151811061147257634e487b7160e01b600052603260045260246000fd5b60200260200101516114849190611acf565b815181106114a257634e487b7160e01b600052603260045260246000fd5b60209081029190910101526001881b81178c83815181106114d357634e487b7160e01b600052603260045260246000fd5b6020026020010181815250505b506114f8565b806114f081611ae6565b91505061133f565b508061150381611ae6565b915050611324565b5050508160208261151c9190611a66565b6115269190611a92565b61153190604e611a66565b9998505050505050505050565b60606000835167ffffffffffffffff81111561156a57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611593578160200160208202803683370190505b509050600a60005b85518110156116ac57818582815181106115c557634e487b7160e01b600052603260045260246000fd5b60200260200101511015611639578481815181106115f357634e487b7160e01b600052603260045260246000fd5b6020026020010151826040517f2b13aef5000000000000000000000000000000000000000000000000000000008152600401610694929190918252602082015260400190565b600061166b87838151811061165e57634e487b7160e01b600052603260045260246000fd5b602002602001015161085c565b90508084838151811061168e57634e487b7160e01b600052603260045260246000fd5b602090810291909101015250806116a481611ae6565b91505061159b565b5090949350505050565b6000610da88284611a92565b60408051600080825260208083018085528690523685900380850135831a948401859052803560608501819052910135608084018190529193909260019060a0016020604051602081039080840390855afa158015611725573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00151979650505050505050565b60008080611767604e87611a66565b9050600061179461178d61177c602089611a66565b611787886001611a66565b906116b6565b839061120a565b905060006117a236836111b6565b80359960209091013598509650505050505050565b8280548282559060005260206000209081019282156117f2579160200282015b828111156117f25782518255916020019190600101906117d7565b506117fe929150611802565b5090565b5b808211156117fe5760008155600101611803565b600060208284031215611828578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610da8578182fd5b6000806020838503121561185d578081fd5b823567ffffffffffffffff80821115611874578283fd5b818501915085601f830112611887578283fd5b813581811115611895578384fd5b8660208260051b85010111156118a9578384fd5b60209290920196919550909350505050565b600060208083850312156118cd578182fd5b823567ffffffffffffffff808211156118e4578384fd5b818501915085601f8301126118f7578384fd5b81358181111561190957611909611b5f565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561194c5761194c611b5f565b604052828152858101935084860182860187018a101561196a578788fd5b8795505b8386101561198c57803585526001959095019493860193860161196e565b5098975050505050505050565b6000602082840312156119aa578081fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156119e9578351835292840192918401916001016119cd565b50909695505050505050565b6000602080835283518082850152825b81811015611a2157858101830151858201604001528201611a05565b81811115611a325783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115611a7957611a79611b33565b500190565b600082611a8d57611a8d611b49565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611aca57611aca611b33565b500290565b600082821015611ae157611ae1611b33565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b1857611b18611b33565b5060010190565b600082611b2e57611b2e611b49565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200f694312992300899e0578c85e85dbd9dd26e174c7fc8b12acf548c2ef3d543b64736f6c63430008040033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "CalldataMustHaveValidPayload";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CalldataOverOrUnderFlow";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CanNotPickMedianOfEmptyArray";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataPackageTimestampMustNotBeZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "DataPackageTimestampsMustBeEqual";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EachSignerMustProvideTheSameValue";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "EmptyCalldataPointersArr";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "GetDataServiceIdNotImplemented";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "IncorrectUnsignedMetadataSize";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedSignersCount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "requiredSignersCount";
            readonly type: "uint256";
        }];
        readonly name: "InsufficientNumberOfUniqueSigners";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidCalldataPointer";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "RedstonePayloadMustHaveAtLeastOneDataPackage";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "receivedSigner";
            readonly type: "address";
        }];
        readonly name: "SignerNotAuthorised";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "TimestampIsNotValid";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "values";
            readonly type: "uint256[]";
        }];
        readonly name: "aggregateValues";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "extractTimestampsAndAssertAllAreEqual";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "extractedTimestamp";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAllMockAuthorised";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAllMockExceptLastOneAuthorised";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAuthorisedMockSignerIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "signerAddress";
            readonly type: "address";
        }];
        readonly name: "getAuthorisedSignerIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDataServiceId";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getUniqueSignersThreshold";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getValuesFromStorage";
        readonly outputs: readonly [{
            readonly internalType: "uint256[]";
            readonly name: "";
            readonly type: "uint256[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32[]";
            readonly name: "dataFeedIdsWithDuplicates";
            readonly type: "bytes32[]";
        }];
        readonly name: "saveOracleValuesInStorage";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "receivedTimestampMilliseconds";
            readonly type: "uint256";
        }];
        readonly name: "validateTimestamp";
        readonly outputs: readonly [];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): SampleDuplicatedDataFeedsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SampleDuplicatedDataFeeds;
}
export {};
//# sourceMappingURL=SampleDuplicatedDataFeeds__factory.d.ts.map