"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TwapsDemoConsumerBase__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "CalldataMustHaveValidPayload",
        type: "error",
    },
    {
        inputs: [],
        name: "CalldataOverOrUnderFlow",
        type: "error",
    },
    {
        inputs: [],
        name: "CanNotPickMedianOfEmptyArray",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampMustNotBeZero",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampsMustBeEqual",
        type: "error",
    },
    {
        inputs: [],
        name: "EachSignerMustProvideTheSameValue",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyCalldataPointersArr",
        type: "error",
    },
    {
        inputs: [],
        name: "GetDataServiceIdNotImplemented",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectUnsignedMetadataSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedSignersCount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "requiredSignersCount",
                type: "uint256",
            },
        ],
        name: "InsufficientNumberOfUniqueSigners",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidCalldataPointer",
        type: "error",
    },
    {
        inputs: [],
        name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receivedSigner",
                type: "address",
            },
        ],
        name: "SignerNotAuthorised",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampSeconds",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimestamp",
                type: "uint256",
            },
        ],
        name: "TimestampFromTooLongFuture",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampSeconds",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimestamp",
                type: "uint256",
            },
        ],
        name: "TimestampIsTooOld",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "aggregateValues",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "extractTimestampsAndAssertAllAreEqual",
        outputs: [
            {
                internalType: "uint256",
                name: "extractedTimestamp",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getDataServiceId",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getUniqueSignersThreshold",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampMilliseconds",
                type: "uint256",
            },
        ],
        name: "validateTimestamp",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610aeb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063c274583a11610050578063c274583a146100ca578063f50b2efe14610109578063f90c49241461011e57600080fd5b80633ce142f51461007757806355a547d5146100a1578063b24ebfcc146100b7575b600080fd5b61008a6100853660046107c0565b610125565b60405160ff90911681526020015b60405180910390f35b6100a96101b0565b604051908152602001610098565b6100a96100c53660046107f4565b61030a565b604080518082018252601381527f72656473746f6e652d74776170732d64656d6f000000000000000000000000006020820152905161009891906108ea565b61011c6101173660046108d2565b61031b565b005b600161008a565b600073aab9568f7165e66acaff50b705c3f3e964cbd24f73ffffffffffffffffffffffffffffffffffffffff8316141561016157506000919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b6000806101bb610327565b905060006101c88261045c565b61ffff16905080610205576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61021060028361095b565b915060005b81811015610304576000610228846104af565b905060008061023860688761095b565b9050600061024682366109c4565b80359350905065ffffffffffff831661028b576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b876102a0578265ffffffffffff1697506102e1565b878365ffffffffffff16146102e1576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102eb848861095b565b96505050505080806102fc906109db565b915050610215565b50505090565b6000610315826104eb565b92915050565b610324816104f6565b50565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe03601358116148061038f576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600036602911156103cc576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd736013560006009610405600362ffffff851661095b565b61040f919061095b565b90503661041d60028361095b565b1115610455576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b60008061046a60208461095b565b9050368111156104a6576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b36033592915050565b60008060006104bd846105ac565b9092509050604e6104cf82602061095b565b6104d99084610987565b6104e3919061095b565b949350505050565b600061031582610603565b60006105046103e883610973565b90508042101561055f57603c61051a42836109c4565b111561055b576040517fb6b0916d000000000000000000000000000000000000000000000000000000008152600481018290524260248201526044016101a7565b5050565b60b461056b82426109c4565b111561055b576040517f0321d0b5000000000000000000000000000000000000000000000000000000008152600481018290524260248201526044016101a7565b6000808080806105bd60418761095b565b905060006105d66105cf60208461095b565b369061075a565b8035945090506105e781600361075a565b62ffffff9490941697933563ffffffff16965092945050505050565b6000815160001415610641576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61064a82610766565b60006002835161065a9190610973565b90506002835161066a9190610a14565b6107115760006107048461067f6001856109c4565b815181106106b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518584815181106106f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516107b4565b90506104e3600282610973565b82818151811061074a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151915050919050565b600061045582846109c4565b8051602082016020820281019150805b828110156107ae57815b818110156107a557815181518082101561079b578084528183525b5050602001610780565b50602001610776565b50505050565b6000610455828461095b565b6000602082840312156107d1578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610455578182fd5b60006020808385031215610806578182fd5b823567ffffffffffffffff8082111561081d578384fd5b818501915085601f830112610830578384fd5b81358181111561084257610842610a86565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561088557610885610a86565b604052828152858101935084860182860187018a10156108a3578788fd5b8795505b838610156108c55780358552600195909501949386019386016108a7565b5098975050505050505050565b6000602082840312156108e3578081fd5b5035919050565b6000602080835283518082850152825b81811015610916578581018301518582016040015282016108fa565b818111156109275783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000821982111561096e5761096e610a28565b500190565b60008261098257610982610a57565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156109bf576109bf610a28565b500290565b6000828210156109d6576109d6610a28565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0d57610a0d610a28565b5060010190565b600082610a2357610a23610a57565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220a5e05fb86c74882d126c1320dcd26f500fa61c44f7148c418152fd5d6b447c8c64736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class TwapsDemoConsumerBase__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TwapsDemoConsumerBase__factory = TwapsDemoConsumerBase__factory;
//# sourceMappingURL=TwapsDemoConsumerBase__factory.js.map