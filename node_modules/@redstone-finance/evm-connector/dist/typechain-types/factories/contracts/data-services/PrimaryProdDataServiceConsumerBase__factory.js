"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PrimaryProdDataServiceConsumerBase__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "CalldataMustHaveValidPayload",
        type: "error",
    },
    {
        inputs: [],
        name: "CalldataOverOrUnderFlow",
        type: "error",
    },
    {
        inputs: [],
        name: "CanNotPickMedianOfEmptyArray",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampMustNotBeZero",
        type: "error",
    },
    {
        inputs: [],
        name: "DataPackageTimestampsMustBeEqual",
        type: "error",
    },
    {
        inputs: [],
        name: "EachSignerMustProvideTheSameValue",
        type: "error",
    },
    {
        inputs: [],
        name: "EmptyCalldataPointersArr",
        type: "error",
    },
    {
        inputs: [],
        name: "GetDataServiceIdNotImplemented",
        type: "error",
    },
    {
        inputs: [],
        name: "IncorrectUnsignedMetadataSize",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedSignersCount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "requiredSignersCount",
                type: "uint256",
            },
        ],
        name: "InsufficientNumberOfUniqueSigners",
        type: "error",
    },
    {
        inputs: [],
        name: "InvalidCalldataPointer",
        type: "error",
    },
    {
        inputs: [],
        name: "RedstonePayloadMustHaveAtLeastOneDataPackage",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "receivedSigner",
                type: "address",
            },
        ],
        name: "SignerNotAuthorised",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampSeconds",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimestamp",
                type: "uint256",
            },
        ],
        name: "TimestampFromTooLongFuture",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampSeconds",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "blockTimestamp",
                type: "uint256",
            },
        ],
        name: "TimestampIsTooOld",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "values",
                type: "uint256[]",
            },
        ],
        name: "aggregateValues",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "extractTimestampsAndAssertAllAreEqual",
        outputs: [
            {
                internalType: "uint256",
                name: "extractedTimestamp",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "signerAddress",
                type: "address",
            },
        ],
        name: "getAuthorisedSignerIndex",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getDataServiceId",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getUniqueSignersThreshold",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "receivedTimestampMilliseconds",
                type: "uint256",
            },
        ],
        name: "validateTimestamp",
        outputs: [],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610bd3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063c274583a11610050578063c274583a146100ca578063f50b2efe14610109578063f90c49241461011e57600080fd5b80633ce142f51461007757806355a547d5146100a1578063b24ebfcc146100b7575b600080fd5b61008a6100853660046108a8565b610125565b60405160ff90911681526020015b60405180910390f35b6100a9610298565b604051908152602001610098565b6100a96100c53660046108dc565b6103f2565b604080518082018252601581527f72656473746f6e652d7072696d6172792d70726f6400000000000000000000006020820152905161009891906109d2565b61011c6101173660046109ba565b610403565b005b600361008a565b6000738bb8f32df04c8b654987daaed53d6b6091e3b77473ffffffffffffffffffffffffffffffffffffffff8316141561016157506000919050565b73deb22f54738d54976c4c0fe5ce6d408e40d8849973ffffffffffffffffffffffffffffffffffffffff8316141561019b57506001919050565b7351ce04be4b3e32572c4ec9135221d0691ba7d20273ffffffffffffffffffffffffffffffffffffffff831614156101d557506002919050565b73dd682daec5a90dd295d14da4b0bec9281017b5be73ffffffffffffffffffffffffffffffffffffffff8316141561020f57506003919050565b739c5ae89c4af6aa32ce58588dbaf90d18a855b6de73ffffffffffffffffffffffffffffffffffffffff8316141561024957506004919050565b6040517fec459bc000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831660048201526024015b60405180910390fd5b6000806102a361040f565b905060006102b082610544565b61ffff169050806102ed576040517f8552ff3c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102f8600283610a43565b915060005b818110156103ec57600061031084610597565b9050600080610320606887610a43565b9050600061032e8236610aac565b80359350905065ffffffffffff8316610373576040517f336dc9d000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b87610388578265ffffffffffff1697506103c9565b878365ffffffffffff16146103c9576040517fd9d1f46500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103d38488610a43565b96505050505080806103e490610ac3565b9150506102fd565b50505090565b60006103fd826105d3565b92915050565b61040c816105de565b50565b60006602ed57011e00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe036013581161480610477576040517fe7764c9e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600036602911156104b4576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd7360135600060096104ed600362ffffff8516610a43565b6104f79190610a43565b905036610505600283610a43565b111561053d576040517fc30a7bd700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600080610552602084610a43565b90503681111561058e576040517f5796f78a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b36033592915050565b60008060006105a584610694565b9092509050604e6105b7826020610a43565b6105c19084610a6f565b6105cb9190610a43565b949350505050565b60006103fd826106eb565b60006105ec6103e883610a5b565b90508042101561064757603c6106024283610aac565b1115610643576040517fb6b0916d0000000000000000000000000000000000000000000000000000000081526004810182905242602482015260440161028f565b5050565b60b46106538242610aac565b1115610643576040517f0321d0b50000000000000000000000000000000000000000000000000000000081526004810182905242602482015260440161028f565b6000808080806106a5604187610a43565b905060006106be6106b7602084610a43565b3690610842565b8035945090506106cf816003610842565b62ffffff9490941697933563ffffffff16965092945050505050565b6000815160001415610729576040517f9e198af900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107328261084e565b6000600283516107429190610a5b565b9050600283516107529190610afc565b6107f95760006107ec84610767600185610aac565b8151811061079e577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518584815181106107df577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015161089c565b90506105cb600282610a5b565b828181518110610832577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020026020010151915050919050565b600061053d8284610aac565b8051602082016020820281019150805b8281101561089657815b8181101561088d578151815180821015610883578084528183525b5050602001610868565b5060200161085e565b50505050565b600061053d8284610a43565b6000602082840312156108b9578081fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461053d578182fd5b600060208083850312156108ee578182fd5b823567ffffffffffffffff80821115610905578384fd5b818501915085601f830112610918578384fd5b81358181111561092a5761092a610b6e565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561096d5761096d610b6e565b604052828152858101935084860182860187018a101561098b578788fd5b8795505b838610156109ad57803585526001959095019493860193860161098f565b5098975050505050505050565b6000602082840312156109cb578081fd5b5035919050565b6000602080835283518082850152825b818110156109fe578581018301518582016040015282016109e2565b81811115610a0f5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115610a5657610a56610b10565b500190565b600082610a6a57610a6a610b3f565b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610aa757610aa7610b10565b500290565b600082821015610abe57610abe610b10565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610af557610af5610b10565b5060010190565b600082610b0b57610b0b610b3f565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220096cf602d2e325846cd73ae1e34eb0fe432ab091a4314ca2555cc8c5e45e254764736f6c63430008040033";
const isSuperArgs = (xs) => xs.length > 1;
class PrimaryProdDataServiceConsumerBase__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.PrimaryProdDataServiceConsumerBase__factory = PrimaryProdDataServiceConsumerBase__factory;
//# sourceMappingURL=PrimaryProdDataServiceConsumerBase__factory.js.map