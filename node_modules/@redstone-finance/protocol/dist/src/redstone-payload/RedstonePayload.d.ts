import { Serializable } from "../common/Serializable";
import { SignedDataPackage } from "../data-package/SignedDataPackage";
import { RedstonePayloadParsingResult } from "./RedstonePayloadParser";
export declare class RedstonePayload extends Serializable {
    readonly signedDataPackages: SignedDataPackage[];
    readonly unsignedMetadata: string;
    constructor(signedDataPackages: SignedDataPackage[], unsignedMetadata: string);
    static prepare(signedDataPackages: SignedDataPackage[], unsignedMetadata: string): string;
    toObj(): {
        signedDataPackages: import("../data-package/SignedDataPackage").SignedDataPackagePlainObj[];
        unsignedMetadata: string;
    };
    toBytes(): Uint8Array;
    serializeUnsignedMetadata(): Uint8Array;
    serializeSignedDataPackages(): Uint8Array;
    static parse(bytesWithRedstonePayloadInTheEnd: Uint8Array): RedstonePayloadParsingResult;
}
//# sourceMappingURL=RedstonePayload.d.ts.map