"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sampleRun = void 0;
const ethers_1 = require("ethers");
async function sampleRun(paramsProvider, pricesConnector, ethFeedConnector, refreshStateCallback = async () => { }) {
    const pricesAdapter = await pricesConnector.getAdapter();
    const coreValues = await pricesAdapter.getPricesFromPayload(paramsProvider);
    console.log(`Core values: ${coreValues}`);
    const deployHash = (await pricesAdapter.writePricesFromPayloadToContract(paramsProvider));
    await pricesConnector.waitForTransaction(deployHash);
    await refreshStateCallback();
    console.log(`Block number: ${await pricesConnector.getBlockNumber()}`);
    const values = await pricesAdapter.readPricesFromContract(paramsProvider);
    console.log(`Values read from contract: ${values.map(convertValue)}`);
    console.log(`Timestamp read from contract: ${await pricesAdapter.readTimestampFromContract()}`);
    const feedAdapter = await ethFeedConnector.getAdapter();
    const { value, timestamp } = await feedAdapter.getPriceAndTimestamp();
    console.log(`ETH price: $${convertValue(value)} - ${(Date.now() - timestamp) / 1000} s. ago`);
}
exports.sampleRun = sampleRun;
function convertValue(v) {
    return ethers_1.BigNumber.from(v).toNumber() / 10 ** 8;
}
//# sourceMappingURL=sample-run.js.map