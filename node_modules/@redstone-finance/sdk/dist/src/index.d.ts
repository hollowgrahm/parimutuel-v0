import { RedstoneOraclesState } from "@redstone-finance/oracles-smartweave-contracts";
import { SignedDataPackagePlainObj } from "@redstone-finance/protocol";
import { DataPackagesRequestParams } from "./request-data-packages";
export declare const getOracleRegistryState: () => Promise<RedstoneOraclesState>;
export declare const getDecimalsForDataFeedId: (dataPackages: SignedDataPackagePlainObj[]) => number | undefined;
export declare const requestRedstonePayload: (reqParams: DataPackagesRequestParams, format?: string, unsignedMetadataMsg?: string) => Promise<string>;
declare const _default: {
    getOracleRegistryState: () => Promise<RedstoneOraclesState>;
    requestRedstonePayload: (reqParams: DataPackagesRequestParams, format?: string, unsignedMetadataMsg?: string | undefined) => Promise<string>;
    resolveDataServiceUrls: (dataServiceId: string) => string[];
    getDecimalsForDataFeedId: (dataPackages: SignedDataPackagePlainObj[]) => number | undefined;
};
export default _default;
export * from "./contracts/ContractParamsProvider";
export * from "./contracts/ContractParamsProviderMock";
export * from "./contracts/IContractConnector";
export * from "./contracts/prices/IPriceFeedContractAdapter";
export * from "./contracts/prices/IPricesContractAdapter";
export * from "./contracts/prices/sample-run";
export * from "./data-feed-values";
export * from "./data-services-urls";
export * from "./fetch-data-packages";
export * from "./request-data-packages";
export * from "./simple-relayer/IPriceManagerContractAdapter";
export * from "./simple-relayer/IPriceRoundsFeedContractAdapter";
export * from "./simple-relayer/start-simple-relayer";
//# sourceMappingURL=index.d.ts.map