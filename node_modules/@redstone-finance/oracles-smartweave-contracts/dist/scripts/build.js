"use strict";
const { build } = require("esbuild");
const replace = require("replace-in-file");
const contracts = [
    "/contracts/redstone-oracle-registry/redstone-oracle-registry.contract.ts",
];
build({
    entryPoints: contracts.map((source) => {
        return `./src${source}`;
    }),
    outdir: "./dist/contracts",
    minify: false,
    bundle: true,
    format: "iife",
    tsconfig: "tsconfig.build.json"
})
    .catch(() => process.exit(1))
    .finally(() => {
    const files = contracts.map((source) => {
        return `./dist/${source}`.replace(".ts", ".js");
    });
    replace.sync({
        files: files,
        from: [/\(\(\) => {/g, /}\)\(\);/g],
        to: "",
        countMatches: true,
    });
});
//# sourceMappingURL=build.js.map